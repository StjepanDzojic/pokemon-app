{"version":3,"sources":["PokemonList.js","Pagination.js","App.js","reportWebVitals.js","index.js"],"names":["PokemonList","pokemon","map","p","Pagination","goToNextPage","goToPrevPage","onClick","App","useState","setPokemon","currentPageUrl","setCurrentPageUrl","nextPageUrl","setNextPageUrl","prevPageUrl","setPrevPageUrl","loading","setLoading","useEffect","cancel","axios","get","cancelToken","CancelToken","c","then","res","data","next","previous","results","name","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"2KAEe,SAASA,EAAT,GAAiC,IAAXC,EAAU,EAAVA,QACjC,OACI,8BACKA,EAAQC,KAAI,SAAAC,GAAC,OACV,8BAAcA,GAAJA,QCJX,SAASC,EAAT,GAAmD,IAA9BC,EAA6B,EAA7BA,aAAcC,EAAe,EAAfA,aAC9C,OACI,gCACKA,GAAgB,wBAAQC,QAASD,EAAjB,sBAChBD,GAAgB,wBAAQE,QAASF,EAAjB,qB,oBCyCdG,MA1Cf,WAAgB,IAAD,EACiBC,mBAAS,IAD1B,mBACNR,EADM,KACGS,EADH,OAE8BD,mBAAS,qCAFvC,mBAENE,EAFM,KAESC,EAFT,OAGwBH,qBAHxB,mBAGNI,EAHM,KAGMC,EAHN,OAIwBL,qBAJxB,mBAINM,EAJM,KAIMC,EAJN,OAKiBP,oBAAS,GAL1B,mBAKNQ,EALM,KAKGC,EALH,KA6Bb,OAtBAC,qBAAU,WACR,IAAIC,EAUJ,OATAC,IAAMC,IAAIX,EAAgB,CACxBY,YAAa,IAAIF,IAAMG,aAAY,SAAAC,GAAC,OAAIL,EAASK,OAChDC,MAAK,SAAAC,GACNT,GAAW,GACXJ,EAAea,EAAIC,KAAKC,MACxBb,EAAeW,EAAIC,KAAKE,UACxBpB,EAAWiB,EAAIC,KAAKG,QAAQ7B,KAAI,SAAAC,GAAC,OAAIA,EAAE6B,YAGnC,kBAAMZ,OACX,CAACT,IAUDM,EAAgB,aAGjB,qCACE,cAACjB,EAAD,CAAaC,QAASA,IACtB,cAACG,EAAD,CACEC,aAAcQ,EAdpB,WACED,EAAkBC,IAa6B,KAC3CP,aAAcS,EAXpB,WACEH,EAAkBG,IAU6B,WC7BpCkB,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBT,MAAK,YAAkD,IAA/CU,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCFdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.67d3b5b6.chunk.js","sourcesContent":["import React from 'react'\n\nexport default function PokemonList({pokemon}) {\n    return (\n        <div>\n            {pokemon.map(p => (\n                <div key={p}>{p}</div>\n            ))}\n        </div>\n    )\n}\n","import React from 'react'\n\nexport default function Pagination({goToNextPage, goToPrevPage}) {\n    return (\n        <div>\n            {goToPrevPage && <button onClick={goToPrevPage}>Previous</button>}       \n            {goToNextPage && <button onClick={goToNextPage}>Next</button> }    \n        </div>\n    )\n}\n","import React, {useState, useEffect} from 'react';\nimport PokemonList from './PokemonList';\nimport Pagination from './Pagination'\nimport axios from 'axios'\n\nfunction App() {\n  const [pokemon, setPokemon] = useState([])\n  const [currentPageUrl,setCurrentPageUrl] = useState(\"https://pokeapi.co/api/v2/pokemon\")\n  const [nextPageUrl,setNextPageUrl] = useState()\n  const [prevPageUrl,setPrevPageUrl] = useState()\n  const [loading, setLoading] = useState(true)\n\n  useEffect(() => {\n    let cancel\n    axios.get(currentPageUrl, {\n      cancelToken: new axios.CancelToken(c => cancel = c)\n    }).then(res => {\n      setLoading(false)\n      setNextPageUrl(res.data.next)\n      setPrevPageUrl(res.data.previous)\n      setPokemon(res.data.results.map(p => p.name))\n    })\n\n    return() => cancel()\n  }, [currentPageUrl])\n  \n  function goToNextPage(){\n    setCurrentPageUrl(nextPageUrl)\n  }\n\n  function goToPrevPage(){\n    setCurrentPageUrl(prevPageUrl)\n  }\n\n  if(loading) return \"Loading...\"\n\n  return (\n    <>\n      <PokemonList pokemon={pokemon}/>\n      <Pagination \n        goToNextPage={nextPageUrl ? goToNextPage : null}\n        goToPrevPage={prevPageUrl ? goToPrevPage : null} \n      />\n    </>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}